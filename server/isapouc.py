# -*- coding: UTF-8 -*-
# ----
# @generated by Jiakun Huang on 2011.11.06
# ----
#服务器端处理命令行程序，用户在选课前抓取新增限选课、必修课，选课结束后抓取新增已选课程，成绩公布后抓取成绩
from optparse import OptionParser ,OptionGroup
import CourseMain
import SQLHelper as sql
import os,sys,time,traceback
reload(sys)
sys.setdefaultencoding('utf-8')


#---------------------------------------------------------
#每学期选课前进行一次
def graballCourses(num,pwd,term):
    print time.ctime()+"\t"+"开始抓取通识限选课..."
    graballXianXuan(num,pwd,term)
    print time.ctime()+"\t"+"开始抓取通识必修课..."
    graballBiXiu(num,pwd,term)
    
def graballXianXuan(num,pwd,term):
#    CourseMain.GetAllMajorCourse(num, pwd, term)
    if CourseMain.GetAllLimitCourse(str(num), str(pwd), str(term))==3:
        print time.ctime()+"\t"+"限选课---连接超时，请重试。"
def graballBiXiu(num,pwd,term):
    if CourseMain.GetBiXiuCourse(str(num), str(pwd), str(term))==3:
        print time.ctime()+"\t"+"必修课---连接超时，请重试。"
       
#---------        
#更新课表
def updateCourse(term):
    students=sql.GetData("select * from User")
    a=0
    for stu in students:
        updateoneCourse(stu[1],stu[3],term)
#更新一个学生的课表      
def updateoneCourse(num,pwd,term):
    returncode= CourseMain.GetCourseOfAready(str(num), str(pwd), term)  
    if returncode==3:
        print  time.ctime()+"\t"+"课表---"+num+"---连接超时，请重试。"


#---------
#更新成绩   
def updateScore(term):
    students=sql.GetData("select * from User")
    for stu in students:
        updateoneScore(stu[1],stu[3],term)
#更新一个学生的成绩
def updateoneScore(num,pwd,term):
    returncode= CourseMain.GetStudentScore(str(num), str(pwd), term)  
    if returncode==3:
        print  time.ctime()+"\t"+"成绩---"+num+"---连接超时，请重试。"
        
        

if __name__=="__main__":
    #命令行处理。查看帮助运行isapouc --help
    usage="isapouc -m [MODE] -n [NUMBER] -p [PASSWORD] -t [TERM]\n\n MODE:\n  a：抓取指定学期选课前的所有课程 \n  c：抓取指定学期选课后所有用户的已选课程\n  s：抓取指定学期用户的所有成绩\n NUMBER:\n  学号\n PASSWORD:\n  密码\n TERM:\n  学期"
    parser=OptionParser(usage)
    parser.add_option("-m","--mode",metavar="MODE",action="store",dest="mode",help="模式")
    parser.add_option("-n","--number",metavar="NUMBER",action="store",dest="number",help="学号")
    parser.add_option("-p","--password",metavar="PASSWORD",action="store",dest="password",help="密码")
    parser.add_option("-t","--term",metavar="TERM",action="store",dest="term",help="学期")
    (options,args)=parser.parse_args()
    if options.mode==None or options.number==None or options.password==None or options.term==None:
        print "无效命令：选项不够。"
        print parser.get_usage()
    else:
        mode=["a","c","s"]
        if options.mode not in mode:
            print "无效命令：模式输入错误"
            print parser.get_usage()
        else:
            if options.mode =="a":
                graballCourses(options.number,options.password,options.term)
            if options.mode =="c":
                updateCourse(options.term)
            if options.mode =="s":
                updateScore(options.term)

